<?xml version="1.0" encoding="utf-8"?>
<Grammar name="tilespace" type="tilegrid" findFirst="true">
  <Constraints>
    <!-- None -->
  </Constraints>
  <Rules>
    <Initial probability="1" name="initial_startroom">
      <RuleCondition>TraverserMatch("graphspace_traverser","start")</RuleCondition>
      <Target>initial_startroom</Target>
      <!-- <RuleAction>TraverserNext("graphspace_traverser",,,)</RuleAction> -->
    </Initial>
    <Rule priority="1" probability="0.1" name="bigroom">
      <RuleCondition>TraverserMatch("graphspace_traverser","bigroom")</RuleCondition>
      <Query>bigroom_query</Query>
      <Target>bigroom_target</Target>
      <RuleAction>TraverserNext("graphspace_traverser",graphspace_traverser_query_1,,)</RuleAction>
    </Rule>
    <Rule priority="0" probability="0.1" name="normal">
      <RuleCondition>TraverserMatch("graphspace_traverser","normal")</RuleCondition>
      <Query>normal_query</Query>
      <Target>normal_target</Target>
      <RuleAction>TraverserNext("graphspace_traverser",graphspace_traverser_query_1,,)</RuleAction>
    </Rule>
    <!-- Connection rules -->
    <Rule priority="2" probability="0.1" name="normal_connect">
      <RuleCondition>TraverserMatch("graphspace_traverser","normal_connect")</RuleCondition>
      <RuleAction>RuleFind("normal_connect_1")</RuleAction>
      <RuleAction>RuleFind("normal_connect_2")</RuleAction>
      <RuleAction>SetConditionResult("endsFound", RuleFound("normal_connect_1") &amp;&amp; RuleFound("normal_connect_2"))</RuleAction>
      <RuleAction>ConditionedAction(CheckAttribute("endsFound", "true"), RuleApply("normal_connect_3"))</RuleAction>
    </Rule>
    <Rule priority="-1" probability="0.1" name="normal_connect_1" active="false">
      <Query>normal_connect_query_1</Query>
      <Target>normal_connect_target_1</Target>
    </Rule>
    <Rule priority="-1" probability="0.1" name="normal_connect_2" active="false">
      <Query>normal_connect_query_2</Query>
      <Target>normal_connect_target_2</Target>
    </Rule>
    <Rule priority="-1" probability="0.1" name="normal_connect_3" active="false">
      <RuleAction>CopyAttribute(grammar.normal_connect_1.matches.0_0, this,,startpoint)</RuleAction>
      <RuleAction>CopyAttribute(grammar.normal_connect_2.matches.3_0, this,,endpoint)</RuleAction>
      <RuleAction>CopyAttribute(grammar.normal_connect_1.matches.1_0, this,,startpoint_2)</RuleAction>
      <RuleAction>CopyAttribute(grammar.normal_connect_2.matches.2_0, this,,endpoint_2)</RuleAction>
      <RuleAction>RuleTransform("normal_connect_1")</RuleAction>
      <RuleAction>RuleTransform("normal_connect_2")</RuleAction>
      <RuleAction>CreatePath(startpoint, endpoint, startpoint_2, endpoint_2, 4)</RuleAction>
      <RuleAction>TraverserNext("graphspace_traverser",grammar.normal_connect.graphspace_traverser_query_1,,)</RuleAction>
    </Rule>
  </Rules>
  <Listeners>
    <Listener alias="controller">controller</Listener>
    <Listener>graphspace_traverser</Listener>
  </Listeners>
</Grammar>